from ApiBot import get_text_addons

from States.State import State

from users.models import BotUser


text_addons = get_text_addons()


class CreateTaskState(State):
    """
    –°–æ—Å—Ç–æ—è–Ω–∏–µ –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É
    """

    NAME = text_addons['create_task_Button']

    def __init__(self, *args, **kwargs):
        super(CreateTaskState, self).__init__(*args, **kwargs)
        self.entry_message = self.NAME + "\n–í –∫–∞–∫–æ–π –ø—Ä–æ–µ–∫—Ç –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É?"
        self.keyboard = State.create_tg_keyboard([
            [text_addons['return_Button']],
            ['üìù–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç']
        ])

    def entry(self, message):
        buttons = self.get_data_from_db(message.from_user.id)[0]
        values = self.get_data_from_db(message.from_user.id)[1]
        self.keyboard = State.create_tg_keyboard(
            [
                *buttons,
            ],
            [
                *values,
            ]
        )
        # self.bot.send_message(message.from_user.id, '', reply_markup=inline_keyboard)
        super(CreateTaskState, self).entry(message)


    def on_text_handler(self, message):
        print(message.text)

    def get_data_from_db(self, user_id):
        """
        –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –∑–∞–¥–∞—á–∞–º–∏ —ç—Ç–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        :param user_id: User_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª
        :return: —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫ - –∏–º—è_–ø—Ä–æ–µ–∫—Ç–∞/—Å–∫–æ–ª–∫–æ_—É—á—Å—Ç–Ω–∏–∫–æ–≤/—Å–∫–æ–ª—å–∫–æ_–∑–∞–¥–∞—á
        """
        numbers = {
            '0': '0Ô∏è‚É£',
            '1': '1Ô∏è‚É£',
            '2': '2Ô∏è‚É£',
            '3': '3Ô∏è‚É£',
            '4': '4Ô∏è‚É£',
            '5': '5Ô∏è‚É£',
            '6': '6Ô∏è‚É£',
            '7': '7Ô∏è‚É£',
            '8': '8Ô∏è‚É£',
            '9': '9Ô∏è‚É£',
        }
        data = []
        values = []
        projects = BotUser.objects.get(user_id=user_id).projects.all()
        num = 1
        for project in projects:
            str_num = ''
            for char in str(num):
                str_num += numbers[char]

            members_of_project = str(len(project.project.members.all()))
            tasks_of_project = str(len(project.project.tasks.all()))
            values.append([str(project.project.id)])
            data.append([f'{str_num}–ü—Ä–æ–µ–∫—Ç {project.project.name}/üë§{members_of_project}/üìà{tasks_of_project}'])
            num += 1
        return (data, values)
